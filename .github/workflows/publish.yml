name: Publish

on:
  workflow_dispatch: 
    inputs:
      tag:
        description: Enter Tag you want to publish
        type: string
        required: true
      deploy:
        description: Deploy to DEV after publish
        type: boolean
        default: true

jobs:
  publish:
    if: ${{ startsWith(inputs.tag, 'release/') }}

    runs-on: ubuntu-latest

    steps:
      - name: Extract Project name & version from tag
        id: project
        run: |
          echo "name=$(cut -d / -f 2 <<< ${{ inputs.tag }})" >> $GITHUB_OUTPUT
          echo "version=$(cut -d / -f 3 <<< ${{ inputs.tag }})" >> $GITHUB_OUTPUT
        shell: bash
        
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
      # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
        
      - run: npm ci

      - name: "Build Project: ${{ steps.project.outputs.name }}"
        run: npx nx run ${{steps.project.outputs.name}}:build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Push ${{ steps.project.outputs.name }}:${{ steps.project.outputs.version }}
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: apps/${{ steps.project.outputs.name }}/Dockerfile
          platforms: linux/amd64
          tags: "ghcr.io/${{github.repository_owner}}/${{ steps.project.outputs.name }}:${{ steps.project.outputs.version }}"

  deploy:
    needs: publish
    if: ${{ inputs.deploy }}

    runs-on: ubuntu-latest

    steps:
      - name: Extract Project name & version from tag
        id: project
        run: |
          echo "name=$(cut -d / -f 2 <<< ${{ inputs.tag }})" >> $GITHUB_OUTPUT
          echo "version=$(cut -d / -f 3 <<< ${{ inputs.tag }})" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Deploy App on DEV
        run: |
          echo "App Name: ${{ steps.project.outputs.name }}"
          echo "App Version: ${{ steps.project.outputs.version }}"
          echo "target-env: DEV"

     